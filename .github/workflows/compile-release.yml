name: Compile Apache Ranger
on:
  push:
    branches:
      - 'main'

defaults:
  run:
    shell: 'bash -Eeuo pipefail -x {0}'

jobs:
  build:
    name: Build Apache Ranger
    runs-on: ubuntu-latest
    steps:
      - name: Download Apache Ranger
        id: download-ranger 
        run: |
          wget -nv "https://github.com/apache/hive/archive/refs/tags/rel/release-3.1.3.tar.gz" -O "hive-3.1.3.tar.gz"
          ls
          tar zxf hive-3.1.3.tar.gz
          cd release-3.1.3
          java_version=8.0.345+1
          echo "::set-output name=java-version::$java_version"

      - name: Set up JDK ${{ steps.download-ranger.outputs.java-version }}
        uses: actions/setup-java@v3.9.0
        with:
          java-version: ${{ steps.download-ranger.outputs.java-version }}
          java-package: jdk
          architecture: x64
          distribution: temurin
          cache: 'maven'

      - name: Build Apache Ranger 2.4.0
        run: |
          cd apache-ranger-2.4.0        
          mvn clean compile package -DskipTests

      - name: Create release 3.1.3
        id: create-release
        uses: actions/create-release@v1.1.4
        env:
          ALI_TK: ${{ secrets.ALI_TK }}
        with:
          tag_name: 3.1.3
          release_name: Apache hive 3.1.3
          draft: false
          prerelease: false
        
      - name: Publish Apache Hive 3.1.3
        run: |
          cd apache-hive-3.1.3/target
          for asset in *.{tar.gz,jar}; do
            curl -H "Authorization: token ${{ secrets.ALI_TK }}" -H "Content-Type: $(file -b --mime-type $asset)" --data-binary @$asset "${{ steps.create-release.outputs.upload_url }}=$(basename $asset)"
          done

      - name: Checkout Apache Hive compiled
        uses: actions/checkout@v3
        with:
          path: apache-ranger-compiled